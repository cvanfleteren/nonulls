
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # needed for creating GitHub Releases

jobs:
  build-test-release-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
          server-id: 'central'
          server-username: CENTRAL_USERNAME
          server-password: CENTRAL_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Validate tag and compute version
        id: vars
        shell: bash
        env:
          TAG: ${{ github.ref_name }}
        run: |
          VERSION="${TAG#v}"
          if [[ "$VERSION" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?$ ]]; then
            echo "is_semver=true" >> "$GITHUB_OUTPUT"
            echo "version=$VERSION" >> "$GITHUB_OUTPUT"
            echo "Tag $TAG is valid SemVer; using version $VERSION"
          else
            echo "is_semver=false" >> "$GITHUB_OUTPUT"
            echo "version=$VERSION" >> "$GITHUB_OUTPUT"
            echo "Tag $TAG is not valid SemVer (after stripping leading 'v'). Skipping release steps."
          fi

      - name: Build and test
        if: steps.vars.outputs.is_semver == 'true'
        run: mvn -B -ntp clean verify -Drevision="${{ steps.vars.outputs.version }}"

      - name: Publish to Maven Central
        if: steps.vars.outputs.is_semver == 'true'
        run: mvn -B -ntp -DskipTests=true deploy -Drevision="${{ steps.vars.outputs.version }}" -Pgpg-sign
        env:
          CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          CENTRAL_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Print success message
        if: steps.vars.outputs.is_semver == 'true'
        run: |
          echo "✅ Successfully released tag ${{ github.ref_name }} (version ${{ steps.vars.outputs.version }})"
          echo "✅ GitHub Release created with artifacts"
          echo "✅ Published to Maven Central"